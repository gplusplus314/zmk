/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC>;
};

#define BASE_L    0
#define NAVSYM_L  1
#define NAVFN_L   2
#define STNGS_L   3

#define G_Q    &plht LALT         Q
#define G_A    &plht LSHFT        A
#define G_O    &prht RSHFT        O
#define G_N0   &prht RSHFT        N0
#define G_SEMI &prht RALT         SEMI
#define G_SPC  &ght  LCTRL        SPC
#define G_ESC  &ght  LGUI         ESC
#define G_RET  &glt  NAVFN_L      RET
#define G_BSPC &glt  NAVSYM_L     BSPC

#define AS(keycode) &as LS(keycode) keycode     // Standard Autoshift Macro
#define AS2(key1, key2) &as key2 key1           // Custom Autoshift Macro
#define G_LPRN AS2(LS(N9), LS(COMMA))
#define G_RPRN AS2(LS(N0), LS(DOT))
#define G_LBRC AS2(LS(LBKT), LBKT)
#define G_RBRC AS2(LS(RBKT), RBKT)

&sl {
  release-after-ms = <3000>;
};

/ {
    combos {
      compatible = "zmk,combos";

      // shortcut
      #define COMBO(NAME, BINDINGS, KEYPOS, TIMEOUT) \
      combo_##NAME { \
        timeout-ms = <TIMEOUT>; \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
      };

      /*                KEY POSITIONS

        ╭────────────────────╮ ╭────────────────────╮
        │  0   1   2   3   4 │ │  5   6   7   8   9 │
        │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
        │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
        ╰───────╮ 30  31  32 │ │ 33  34  35 ╭───────╯
                ╰────────────╯ ╰────────────╯        */

      COMBO(slop_j, &kp J, 5 15, 40)
      COMBO(slop_j, &kp J, 5 6, 40)
      COMBO(slop_k, &kp K, 15 25, 40)
      COMBO(slop_k, &kp K, 25 26, 40)
      COMBO(slop_b, &kp B, 4 14, 40)
      COMBO(slop_b, &kp B, 3 4, 40)
      COMBO(slop_v, &kp V, 14 24, 40)
      COMBO(slop_v, &kp V, 23 24, 40)

      COMBO(capsword, &caps_word, 10 19, 40)
      
      COMBO(quote, &kp SQT, 16 17, 30)
      COMBO(minus, &kp MINUS, 26 17, 40)

      COMBO(tab, &kp TAB, 12 13, 30)
      COMBO(equal, &kp EQUAL, 12 23, 40)

      COMBO(lprn, G_LPRN, 3 13, 40)
      COMBO(rprn, G_RPRN, 6 16, 40)
      COMBO(lbrc, G_LBRC, 2 12, 40)
      COMBO(rbrc, G_RBRC, 7 17, 40)

      COMBO(under, &kp UNDER, 31 32, 40)

      COMBO(del, &kp DEL, 33 34, 40)

      COMBO(settings, &sl STNGS_L, 6 7 8 9, 40)
    };

    behaviors {
      plht: positional_left_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "POSITIONAL_LEFT_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <150>;
        quick-tap-ms = <150>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
      };

      prht: positional_right_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "POSITIONAL_RIGHT_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <150>;
        quick-tap-ms = <150>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
      };

      ght: gerrys_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "HOLD_TAP";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <150>;
        quick-tap-ms = <150>;
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <10 19 33 34>;
      };

      glt: gerrys_layer_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "LAYER_TAP";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <150>;
        quick-tap-ms = <150>;
        bindings = <&mo>, <&kp>;
      };

      as: auto_shift {
        compatible = "zmk,behavior-hold-tap";
        label = "AUTO_SHIFT";
        #binding-cells = <2>;
        tapping_term_ms = <150>;
        quick_tap_ms = <150>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
      };

    };

	keymap {
		compatible = "zmk,keymap";

		base_layer {
			bindings = <
        G_Q          &kp W         &kp F         &kp P              &kp B         /*& &*/     &kp J               &kp L            &kp U                    &kp Y         G_SEMI
        G_A          &kp R         &kp S         &kp T              &kp G         /*& &*/     &kp M               &kp N            &kp E                    &kp I         G_O
        &kp Z        &kp X         &kp C         &kp D              &kp V         /*& &*/     &kp K               &kp H            AS(COMMA)                AS(DOT)       AS(FSLH)
        /*&    &*/                     &trans        G_SPC              G_ESC     /*& &*/ G_RET          G_BSPC           &trans                /* &             &*/
			>;
		};

		navsym_layer {
			bindings = <
        &trans       &kp HOME      &kp UP       &kp END             AS(EQUAL)             /*& &*/     AS(LBKT)            AS(N4)           AS(N5)                   AS(N6)        &prht RALT DOT
        &trans       &kp LEFT      &kp DOWN     &kp RIGHT           AS(MINUS)             /*& &*/     AS(GRAVE)           AS(N1)           AS(N2)                   AS(N3)        AS(N0)
        &trans       G_LBRC        G_LPRN       G_RPRN              G_RBRC                /*& &*/     AS(RBKT)            AS(N7)           AS(N8)                   AS(N9)        AS(BSLH)
        /*&    &*/                     &trans        &trans             &trans            /*& &*/ &trans         &trans           &trans                /* &             &*/
			>;
		};

		navfn_layer {
			bindings = <
        &trans       &trans        &trans       &trans              &trans                /*& &*/     &trans              &kp F4           &kp F5                   &kp F6        &kp F11   
        &trans       &trans        &trans       &trans              &trans                /*& &*/     &trans              &kp F1           &kp F2                   &kp F3        &kp F10
        &trans       &trans        &trans       &trans              &trans                /*& &*/     &trans              &kp F7           &kp F8                   &kp F9        &kp F12
        /*&    &*/                     &trans        &ght LCTRL LC(SPC) &ght LGUI LG(SPC) /*& &*/ &trans         &trans           &trans                /* &             &*/
			>;
		};

		settings_layer {
			bindings = <
        &trans       &trans        &bt BT_SEL 4  &bt BT_SEL 3       &bt BT_CLR    /*& &*/     &trans              &trans           &trans                   &trans        &trans
        &trans       &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0       &trans        /*& &*/     &trans              &trans           &trans                   &trans        &trans
        &trans       &trans        &trans        &trans             &trans        /*& &*/     &trans              &trans           &trans                   &trans        &trans
        /*&    &*/                     &trans        &trans             &trans    /*& &*/ &trans         &trans           &trans                /* &             &*/
			>;
		};

		trans_layer {
			bindings = <
        &trans       &trans        &trans        &trans             &trans        /*& &*/     &trans              &trans           &trans                   &trans        &trans
        &trans       &trans        &trans        &trans             &trans        /*& &*/     &trans              &trans           &trans                   &trans        &trans
        &trans       &trans        &trans        &trans             &trans        /*& &*/     &trans              &trans           &trans                   &trans        &trans
        /*&    &*/                     &trans        &trans             &trans    /*& &*/ &trans         &trans           &trans                /* &             &*/
			>;
		};

	};
};
